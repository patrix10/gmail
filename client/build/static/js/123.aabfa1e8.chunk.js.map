{"version":3,"file":"static/js/123.aabfa1e8.chunk.js","mappings":"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","sources":["services/api.js","hooks/useApi.jsx","components/Header.jsx","components/ComposeMail.jsx","config/sidebar.config.js","components/SideBarContent.jsx","components/SideBar.jsx","pages/Main.jsx","services/api.urls.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URI = ''\n\nconst API_GMAIL = async (serviceUrlObject, requestData = {}, type) => {\n    const { params, urlParams, ...body } = requestData;\n\n    return await axios({\n        method: serviceUrlObject.method,\n        url: `${API_URI}/${serviceUrlObject.endpoint}/${type}`,\n        data: requestData\n    })\n}\n\nexport default API_GMAIL;","import { useState } from 'react';\nimport API from '../services/api';\n\nconst useApi = (urlObject) => {\n    const [response, setResponse] = useState(null);\n    const [error, setError] = useState(\"\");\n    const [isLoading, setIsLoading] = useState(false);\n\n    const call = async (payload, type = '') => {\n        setResponse(null);\n        setIsLoading(true);\n        setError(\"\");\n        \n        try {\n            let res = await API(urlObject, payload, type);\n            setResponse(res.data);\n        } catch (error) {\n            setError(error.message);\n        } finally {\n            setIsLoading(false);\n        }\n    }\n\n    return { call, response, error, isLoading };\n}\n\nexport default useApi;","\n\nimport { AppBar, Toolbar, Box, InputBase, styled } from '@mui/material';\nimport { Menu as MenuIcon, Tune, HelpOutlineOutlined, SettingsOutlined, \n    AppsOutlined, AccountCircleOutlined, Search } from '@mui/icons-material'\n\nimport { gmailLogo } from '../constants/constant';\n\nconst StyledAppBar = styled(AppBar)`\n    background: #f5F5F5;\n    box-shadow: none;\n`;\n\nconst SearchWrapper = styled(Box)`\n    background: #EAF1FB;\n    margin-left: 80px;\n    border-radius: 8px;\n    min-width: 690px;\n    max-width: 720px;\n    height: 48px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 0 20px;\n    & > div {\n        width: 100%\n    }\n`\n\nconst OptionsWrapper = styled(Box)`\n    width: 100%;\n    display: flex;\n    justify-content: end;\n    & > svg {\n        margin-left: 20px;\n    }\n`\n\nconst Header = ({ toggleDrawer }) => {\n\n    return (\n        <StyledAppBar position=\"static\">\n            <Toolbar>\n                <MenuIcon color=\"action\" onClick={toggleDrawer} />\n                <img src={gmailLogo} alt=\"logo\" style={{ width: 110, marginLeft: 15 }} />\n                <SearchWrapper>\n                    <Search color=\"action\" />\n                    <InputBase />\n                    <Tune  color=\"action\"/>\n                </SearchWrapper>\n\n                <OptionsWrapper>\n                    <HelpOutlineOutlined color=\"action\" />\n                    <SettingsOutlined color=\"action\" />\n                    <AppsOutlined color=\"action\" />\n                    <AccountCircleOutlined color=\"action\" />\n               </OptionsWrapper>\n            </Toolbar>\n        </StyledAppBar>\n    )\n}\n\nexport default Header;","import { useState } from 'react';\n\nimport { Dialog, styled, Typography, Box, InputBase, TextField, Button } from '@mui/material'; \nimport { Close, DeleteOutline } from '@mui/icons-material';\nimport useApi from '../hooks/useApi';\nimport { API_URLS } from '../services/api.urls';\n\nconst dialogStyle = {\n    height: '90%',\n    width: '80%',\n    maxWidth: '100%',\n    maxHeight: '100%',\n    boxShadow: 'none',\n    borderRadius: '10px 10px 0 0',\n}\n\nconst Header = styled(Box)`\n    display: flex;\n    justify-content: space-between;\n    padding: 10px 15px;\n    background: #f2f6fc;\n    & > p {\n        font-size: 14px;\n        font-weight: 500;\n    }\n`;\n\nconst RecipientWrapper = styled(Box)`\n    display: flex;\n    flex-direction: column;\n    padding: 0 15px;\n    & > div {\n        font-size: 14px;\n        border-bottom: 1px solid #F5F5F5;\n        margin-top: 10px;\n    }\n`;\n\nconst Footer = styled(Box)`\n    display: flex;\n    justify-content: space-between;\n    padding: 10px 15px;\n    align-items: center;\n`;\n\nconst SendButton = styled(Button)`\n    background: #0B57D0;\n    color: #fff;\n    font-weight: 500;\n    text-transform: none;\n    border-radius: 18px;\n    width: 100px;\n`\n\nconst ComposeMail = ({ open, setOpenDrawer }) => {\n    const [data, setData] = useState({});\n    const sentEmailService = useApi(API_URLS.saveSentEmails);\n    const saveDraftService = useApi(API_URLS.saveDraftEmails);\n\n    const config = {\n        Username: 'pratiksingh10@yopmail.com',\n        Password: 'BCFFBBA7483E53834FC048A315EEB6EA3834',\n        Host: 'smtp.elasticemail.com',\n        Port: 2525,\n    }\n\n    const onValueChange = (e) => {\n        setData({ ...data, [e.target.name]: e.target.value })\n    }\n\n    const sendEmail = async (e) => {\n        e.preventDefault();\n\n        if (window.Email) {\n            window.Email.send({\n                ...config,\n                To : data.to,\n                From : \"pratikvedanshsingh@gmail.com\",\n                Subject : data.subject,\n                Body : data.body\n            }).then(\n                message => alert(message)\n            );\n        }\n\n        const payload = {\n            to : data.to,\n            from : \"pratikvedanshsingh@gmail.com\",\n            subject : data.subject,\n            body : data.body,\n            date: new Date(),\n            image: '',\n            name: 'Pratik Vedansh Singh',\n            starred: false,\n            type: 'sent'\n        }\n\n        sentEmailService.call(payload);\n\n        if (!sentEmailService.error) {\n            setOpenDrawer(false);\n            setData({});\n        } else {\n\n        }\n    }\n\n    const closeComposeMail = (e) => {\n        e.preventDefault();\n\n        const payload = {\n            to : data.to,\n            from : \"pratikvedanshsingh@gmail.com\",\n            subject : data.subject,\n            body : data.body,\n            date: new Date(),\n            image: '',\n            name: 'Pratik Vedansh Singh',\n            starred: false,\n            type: 'drafts'\n        }\n\n        saveDraftService.call(payload);\n\n        if (!saveDraftService.error) {\n            setOpenDrawer(false);\n            setData({});\n        } else {\n\n        }\n    }\n\n    return (\n        <Dialog\n            open={open}\n            PaperProps={{ sx: dialogStyle }}\n        >\n            <Header>\n                <Typography>New Message</Typography>\n                <Close fontSize=\"small\" onClick={(e) => closeComposeMail(e)} />\n            </Header>\n            <RecipientWrapper>\n                <InputBase placeholder='Recipients' name=\"to\" onChange={(e) => onValueChange(e)} value={data.to} />\n                <InputBase placeholder='Subject' name=\"subject\" onChange={(e) => onValueChange(e)} value={data.subject} />\n            </RecipientWrapper>\n            <TextField \n                multiline\n                rows={20}\n                sx={{ '& .MuiOutlinedInput-notchedOutline': { border: 'none' } }}\n                name=\"body\"\n                onChange={(e) => onValueChange(e)}\n                value={data.body}\n            />\n            <Footer>\n                <SendButton onClick={(e) => sendEmail(e)}>Send</SendButton>\n                <DeleteOutline onClick={() => setOpenDrawer(false)} />\n            </Footer>\n        </Dialog>\n    )\n}\n\nexport default ComposeMail;","\n\nimport { routes } from \"../routes/routes\"\nimport { Photo, StarOutline, SendOutlined, InsertDriveFileOutlined, DeleteOutlined,\n    MailOutlined } from '@mui/icons-material';\n\nexport const SIDEBAR_DATA = [\n    {\n        name: 'inbox',\n        title: 'Inbox',\n        icon: Photo,\n        path: routes.emails.path\n    },\n    {\n        name: 'starred',\n        title: 'Starred',\n        icon: StarOutline,\n        path: routes.emails.path\n    },\n    {\n        name: 'sent',\n        title: 'Sent',\n        icon: SendOutlined,\n        path: routes.emails.path\n    },\n    {\n        name: 'drafts',\n        title: 'Drafts',\n        icon: InsertDriveFileOutlined,\n        path: routes.emails.path\n    },\n    {\n        name: 'bin',\n        title: 'Bin',\n        icon: DeleteOutlined,\n        path: routes.emails.path\n    },\n    {\n        name: 'allmail',\n        title: 'All Mail',\n        icon: MailOutlined,\n        path: routes.emails.path\n    }\n];","import { useState } from 'react';\nimport { Button, List, ListItem, Box, styled } from '@mui/material';\nimport ComposeMail from './ComposeMail';\nimport { SIDEBAR_DATA } from '../config/sidebar.config';\nimport { CreateOutlined } from '@mui/icons-material';\nimport { NavLink, useParams } from 'react-router-dom';\nimport { routes } from '../routes/routes';\n\nconst Container = styled(Box)`\n    padding: 8px;\n    & > ul {\n        padding: 10px 0 0 5px;\n        font-size: 14px;\n        font-weight: 500;\n        cursor: pointer;\n        & > a {\n            text-decoration: none;\n            color: inherit;\n        }\n        & > a > li > svg {\n            margin-right: 20px;\n        }\n    }\n`\n\nconst ComposeButton = styled(Button)`\n    background: #c2e7ff;\n    color: #001d35;\n    border-radius: 16px;\n    padding: 15px;\n    min-width: 140px;\n    text-transform: none;\n`\n\nconst SideBarContent = () => {\n\n    const [openDrawer, setOpenDrawer] = useState(false);\n\n    const { type } = useParams();\n\n    const onComposeClick = () => {\n        setOpenDrawer(true);\n    }\n\n    return (\n        <Container>\n            <ComposeButton onClick={() => onComposeClick()}>\n                <CreateOutlined style={{ marginRight: 10 }} />Compose\n            </ComposeButton>\n            <List>\n                {\n                    SIDEBAR_DATA.map(data => (\n                        <NavLink key={data.name} to={`${routes.emails.path}/${data.name}`}>\n                            <ListItem style={ type === data.name.toLowerCase() ? {\n                                backgroundColor: '#d3e3fd',\n                                borderRadius: '0 16px 16px 0'\n                            } : {}}><data.icon fontSize=\"small\" />{data.title}</ListItem>\n                        </NavLink>\n                    ))\n                }\n            </List>\n            <ComposeMail open={openDrawer} setOpenDrawer={setOpenDrawer} />\n        </Container>\n    )\n}\n\nexport default SideBarContent;","\nimport { Drawer, styled } from \"@mui/material\";\n\nimport SideBarContent from \"./SideBarContent\";\n\nconst StyledDrawer = styled(Drawer)`\n    margin-top: 54px;\n`\n\nconst SideBar = ({ toggleDrawer, openDrawer }) => {\n\n    return (\n        <StyledDrawer\n            anchor='left'\n            open={openDrawer}\n            onClose={toggleDrawer}\n            hideBackdrop={true}\n            ModalProps={{\n                keepMounted: true,\n            }}\n            variant=\"persistent\"\n            sx={{\n                '& .MuiDrawer-paper': { \n                    width: 250,\n                    borderRight: 'none',\n                    background: '#f5F5F5',\n                    marginTop: '64px',\n                    height: 'calc(100vh - 64px)'\n                },\n            }}\n          >\n            <SideBarContent />\n        </StyledDrawer>\n    )\n}\n\nexport default SideBar;","import { useState, Suspense } from 'react';\n\nimport { Header, SideBar } from '../components';\nimport { Box, styled } from '@mui/material';\nimport { Outlet } from 'react-router-dom';\nimport SuspenseLoader from '../components/common/SuspenseLoader';\n\nconst Wrapper = styled(Box)`\n    display: flex;\n`;\n\nconst Main = () => {\n\n    const [openDrawer, setOpenDrawer] = useState(true);\n\n    const toggleDrawer = () => {\n        setOpenDrawer(prevState => !prevState);\n    }\n    \n    return (\n        <>\n            <Header toggleDrawer={toggleDrawer} />\n            <Wrapper>\n                <SideBar toggleDrawer={toggleDrawer} openDrawer={openDrawer} />\n                <Suspense fallback={<SuspenseLoader />} >\n                    <Outlet context={{ openDrawer }} />\n                </Suspense>\n            </Wrapper>\n        </>\n    )\n}\n\nexport default Main;","export const API_URLS = {\n    saveSentEmails: {\n        endpoint: 'save',\n        method: 'POST'\n    },\n    saveDraftEmails: {\n        endpoint: 'save-draft',\n        method: 'POST'\n    },\n    getEmailFromType: {\n        endpoint: 'emails',\n        method: 'GET'\n    },\n    toggleStarredMails: {\n        endpoint: 'starred',\n        method: 'POST'\n    },\n    deleteEmails: {\n        endpoint: 'delete',\n        method: 'DELETE'\n    },\n    moveEmailsToBin: {\n        endpoint: 'bin',\n        method: 'POST'\n    }\n}"],"names":["async","serviceUrlObject","requestData","arguments","length","undefined","type","params","urlParams","body","axios","method","url","endpoint","data","urlObject","response","setResponse","useState","error","setError","isLoading","setIsLoading","call","payload","res","API","message","StyledAppBar","styled","AppBar","SearchWrapper","Box","OptionsWrapper","_ref","toggleDrawer","_jsx","position","children","_jsxs","Toolbar","MenuIcon","color","onClick","src","gmailLogo","alt","style","width","marginLeft","Search","InputBase","Tune","HelpOutlineOutlined","SettingsOutlined","AppsOutlined","AccountCircleOutlined","dialogStyle","height","maxWidth","maxHeight","boxShadow","borderRadius","Header","RecipientWrapper","Footer","SendButton","Button","open","setOpenDrawer","setData","sentEmailService","useApi","API_URLS","saveSentEmails","saveDraftService","saveDraftEmails","config","Username","Password","Host","Port","onValueChange","e","target","name","value","Dialog","PaperProps","sx","Typography","Close","fontSize","preventDefault","to","from","subject","date","Date","image","starred","closeComposeMail","placeholder","onChange","TextField","multiline","rows","border","window","Email","send","To","From","Subject","Body","then","alert","sendEmail","DeleteOutline","SIDEBAR_DATA","title","icon","Photo","path","routes","emails","StarOutline","SendOutlined","InsertDriveFileOutlined","DeleteOutlined","MailOutlined","Container","ComposeButton","SideBarContent","openDrawer","useParams","CreateOutlined","marginRight","List","map","NavLink","ListItem","toLowerCase","backgroundColor","ComposeMail","StyledDrawer","Drawer","anchor","onClose","hideBackdrop","ModalProps","keepMounted","variant","borderRight","background","marginTop","Wrapper","Main","prevState","_Fragment","SideBar","Suspense","fallback","SuspenseLoader","Outlet","context","getEmailFromType","toggleStarredMails","deleteEmails","moveEmailsToBin"],"sourceRoot":""}